<?php

/**
 * @file
 * Movie custom module file.
 */


use Drupal\node\Entity\Node;
use Drupal\Core\Entity\EntityInterface;



function delete_nodes_example($nids, &$context){
  $message = 'Deleting ALL Nodes ...';
  $results = array();
  foreach ($nids as $nid) {
      $node = Node::load($nid);
      $results[] = $node->delete();
  }
  $context['message'] = $message;
  $context['results'] = $results;
}



function delete_nodes_finished($success, $results, $operations) {
    // The 'success' parameter means no fatal PHP errors were detected. All
    // other error management should be handled using 'results'.
    if ($success) {
        $message = \Drupal::translation()->formatPlural(
            count($results),
            'One post processed.', '@count posts processed.'
        );
    }
    else {
        $message = t('Finished with an error.');
    }
    \Drupal::messenger()->addStatus($message);
}



/**
 *
 */
function movie_custom_theme() {
  return [
    'weather' => [
      'variables' => [
        'data' => [],
        'url' => '',
        'secret' => NULL,
      ],
    ],
    'youtube_link_formatter' => [
      'variables' => ['url' => NULL],
      'template' => 'youtube-link-formatter',
    ],
  ];
}


function movie_custom_preprocess_html(&$variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $variables['term_id'] = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
  }
	$current_path = \Drupal::service('path.current')->getPath();
	$current_path_array = explode('/',$current_path);
	if ($current_path_array[1] == 'user' && is_numeric($current_path_array[2])) {
		$variables['attributes']['class'][] = 'usr-prfl';
	}
	if ($current_path_array[1] == 'user' && is_numeric($current_path_array[2]) && (isset($current_path_array[3]) && $current_path_array[3] == 'edit')) {
		$variables['attributes']['class'][] = 'usr-prfl-edit';
	}

}



/**
 * Implements hook_form_FORM_ID_alter().
 */
function hook_examples_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Add a custom submit button to the login form.
  $form['third_party_login'] = [
    '#type' => 'submit',
    '#value' => t('Login with Third-Party Provider'),
    '#submit' => ['hook_examples_user_login_form_submit'], // Call the custom submit function.
  ];
}
